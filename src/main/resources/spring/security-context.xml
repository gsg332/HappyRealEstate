<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd
	 http://www.springframework.org/schema/util
	 http://www.springframework.org/schema/util/spring-util-3.1.xsd">
           
	<http pattern="/favicon.ico" security="none" />
	<http pattern="/resources/**" security="none" />
	<http pattern="/error/**" security="none" />
	<http pattern="/login**" security="none" />
	<http pattern="/user/regist**" security="none" />
	<http pattern="/user/find**" security="none" />
	<http pattern="/check/**" security="none" />
	<http pattern="/sms/**" security="none" />
	<http pattern="/api/**" security="none" />
	<http pattern="/system/ip/regist**" security="none" />
	<http pattern="/" security="none" />
	
	<http auto-config="true" use-expressions="true">
	
		<access-denied-handler error-page="/error404.do"/>
	
		<intercept-url pattern="/resources/**" access="permitAll" />
		<intercept-url pattern="/system/fnConfig/**" access="hasAnyRole('INCON_ADMIN')" />
		<intercept-url pattern="/map/coordinate/insert.json**" access="hasAnyRole('INCON_ADMIN')" />
		<intercept-url pattern="/apply/apply/videoPop.do**" access="permitAll" /> <!-- ActivieX에 의해 강제로 관리자 권한이 있는 IE를 띄울 경우 세션이 분리되기 때문에 세션 상관 없이 접근 가능하도록 추가.재생시 백업뷰어에서 인증과정을 거치기 때문에  모두 허용해도 될 것 같음. -->
		<intercept-url pattern="/**" access="hasAnyRole('7','0','8','9')" />
		
		<form-login username-parameter="userId"
			password-parameter="password" 
			login-page="/login.do"
			default-target-url="/main.do"
			authentication-success-handler-ref="customAuthenticationSuccessHandler"
			authentication-failure-url="/login.do?fail=true" />
		
		<logout invalidate-session="true" logout-success-url="/login.do?logout=true" logout-url="/j_spring_security_logout" />
		
		<session-management invalid-session-url="/login.do?timeover=true">
			<concurrency-control max-sessions="1" expired-url="/login.do?duplicate=true" />
		</session-management>
		
	</http>
	
	<beans:bean id="customAuthenticationSuccessHandler" class="com.happyJ.realestate.common.LoginSuccessHandler">
		<beans:property name="securityUserService" ref="sUserService" />
	</beans:bean>
	
	<beans:bean id="sUserService" class="com.happyJ.realestate.common.SecurityUserService" />
	
	<!-- Select users and user_roles from database -->
	<authentication-manager erase-credentials="false">
	  <authentication-provider>
			<jdbc-user-service data-source-ref="dataSource" 
				users-by-username-query="select userid as username, password as password, 1 as enabled from ves_user where userid = ? and expired = 'N' and permit = 1"
				authorities-by-username-query="select userid as username, level as role from ves_user where userid = ? and expired = 'N' and permit =1" />
			<password-encoder ref="mysqlPasswordEncoder" />
	  </authentication-provider>
	</authentication-manager>
	
	<beans:bean id="mysqlPasswordEncoder" class="com.happyJ.realestate.common.util.MySqlPasswordEncoder" />
	
	<beans:bean id="roleVoter" class="org.springframework.security.access.vote.RoleHierarchyVoter">
	    <beans:constructor-arg ref="roleHierarchy" />
	</beans:bean>
	<beans:bean id="roleHierarchy"
	        class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
	    <beans:property name="hierarchy">
	        <beans:value>
	            9 > 8
	            8 > 0
	            0 > 7
	        </beans:value>
	    </beans:property>
	</beans:bean>
	
</beans:beans>